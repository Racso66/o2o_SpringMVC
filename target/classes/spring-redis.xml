<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
    
    <!-- Redis connection pool setting -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- control one pool can have how many jedis -->
		<property name="maxTotal" value="${redis.pool.maxActive}" />
		<!-- maxIdle connection, we set it 20, which means 
		if not one use Redis server, and it still have 20 idle connections -->
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<!-- max wait time: if no client connect the server, 
		the connection pool if over the max wait time will return back, 
		it will throw a runtime exception -->
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />
		<!-- once get a connection it will check is it valid -->
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}"></property>
	</bean>
	
	<!-- create Redis connection pool, and setup -->
	<bean id="jedisWritePool" class="com.imooc.o2o.cache.JedisPoolWriper" depends-on="jedisPoolConfig">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${redis.hostname}" />
		<constructor-arg index="2" value="${redis.port}" type="int" />
	</bean>
	
	<!-- create Redis tool util, bind the Redis connection -->
	<bean id="jedisUtil" class="com.imooc.o2o.cache.JedisUtil" scope="singleton">
		<property name="jedisPool">
			<ref bean="jedisWritePool" />
		</property>
	</bean>
	
	<!-- Redis key action -->
	<bean id="jedisKeys" class="com.imooc.o2o.cache.JedisUtil$Keys" scope="singleton">
		<constructor-arg ref="jedisUtil"></constructor-arg>
	</bean>
	
	<!-- Redis String action -->
	<bean id="jedisStrings" class="com.imooc.o2o.cache.JedisUtil$Strings" scope="singleton">
		<constructor-arg ref="jedisUtil"></constructor-arg>
	</bean>
	
</beans>